var Customer = /** @class */ (function () {
    //constructors - use constructor keyword - must use "this"
    function Customer(theFirst, theLast) {
        this._firstName = theFirst;
        this._lastName = theLast;
    }
    Object.defineProperty(Customer.prototype, "firstName", {
        //get/set accessors 
        get: function () {
            return this._firstName;
        },
        //no return type (not even void)
        set: function (value) {
            this._firstName = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Customer.prototype, "lastName", {
        //generated by IDE
        get: function () {
            return this._lastName;
        },
        set: function (value) {
            this._lastName = value;
        },
        enumerable: false,
        configurable: true
    });
    return Customer;
}());
//with constructor
var myCustomer = new Customer('Martin', 'Lawrence');
// myCustomer.firstName = 'Susan';
// myCustomer.lastName = 'Public';
console.log(myCustomer.firstName);
console.log(myCustomer.lastName);
//Accessors are only available when targeting ECMAScript 5 and higher.
// use tsc --target ES5
